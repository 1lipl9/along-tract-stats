source('~/GitHub/Myhub/Rbf/DoubleGroup/errbarplot.R')
library(ggplot2)
ls
ls()
pwd
getwd()
install.packages(c("cluster", "codetools", "colorspace", "foreign", "kernlab", "lattice", "Matrix", "mgcv", "mnormt", "psych", "R6", "stringi", "survival"))
install.packages('rmarkdown')
install.packages("Hotelling")
library(Hotelling)
data("container.df")
fit <- hotel.test(.~gp, data = container.df)
fit
fit$stats
?? solve
?? %*%
x <- 1:4
x*x
x%*%x
?? rnor
?? rnorm
rnorm(2)
library(ggplot2)
aa <- rnorm(1000)
geom_histogram(data = aa)
?? geom_histogram
hist(aa)
aa
names(aa)
head(diamonds)
ggplot(diamonds, aes(carat)) + geom_histogram()
aa_df <- as.data.frame(aa)
names(aa_df)
ggplot(aa_df, aes(aa)) + geom_histogram()
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
trk_data_FD
boxp1 <- ggplot(aes(x = from, y = FD), data = trk_CST)
boxp1 <- boxp1 + geom_boxplot() + theme_bw()
boxp1
boxp1 <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp1 <- boxp1 + geom_boxplot() + theme_bw()
boxp1
boxp1 + ylim(0, 0.2)
trk_CST <- filter(trk_data_FD, Tract == 'CST')
trk_CING <- filter(trk_data_FD, Tract == 'CING')
trk_UNC <- filter(trk_data_FD, Tract == 'UNC')
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp <- boxp1 + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
trk_CST <- filter(trk_data_FD, Tract == 'CST')
trk_CING <- filter(trk_data_FD, Tract == 'CING')
trk_UNC <- filter(trk_data_FD, Tract == 'UNC')
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp <- boxp + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
boxp1
boxp2
boxp3
boxp2
boxp3
boxp3
boxp1
grid.arrange(boxp1, boxp2, boxp3)
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = dat)
boxp <- boxp + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
grid.arrange(boxp1, boxp2, boxp3)
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
p1 <- ggplot(aes(x = Position, y = FA), data = trk_data)
p1 <- p1 + geom_line(aes(group = ID), alpha = 0.2) + facet_grid(Tract~Hemisphere) + ylim(0, 1) +
stat_summary(aes(group = 1), fun.data = groupStat, geom = 'smooth') + theme_bw()
p2 <- p1 + geom_line(data = trk_data_temp, aes(x = Position, y = FA), size = 2, colour = 'red', alpha = 0.2)
p2
p2 <- p1 + geom_line(data = trk_data_temp, aes(x = Position, y = FA), size = 2, colour = 'red', alpha = 0.5)
p2
?? group_by
aa <- group_by(trk_data, Point, Tract)
bb <- summarise(aa, n = n())
bb
bb <- summarise(aa, mv = mean())
aa
bb <- summarise(aa, mv = mean(FA))
bb
trk_data_temp
head(trk_data_temp)
trk_data_group <- group_by(trk_data, Point, Hemisphere, Tract)
trk_data_mean <- summarise(trk_data_group, mv = mean(FA))
trk_data_mean
?? as.name
?? filter
?? for
end
??for
end
for(aa in c('L', 'R')) {
cat('THis is ', aa)
}
corrCal <- function(dat1, dat2, hemi, trk) {
corVal <- data.frame(Hemisphere = character(0), Tract = character(0),
corVal = numeric(0))
for(aa in hemi) {
for(bb in trk){
subdat1 <- filter(dat1, Hemisphere == aa & Tract == bb)
subdat2 <- filter(dat2, Hemisphere == aa & Tract == bb)
corval <- data.frame(Hemisphere = aa, Tract = bb,
corVal = cor.test(subdat1$FA, subdat2$mv))
corVal <- rbind(corVal, corval)
}
}
return(corVal)
}
corVal <- corrCal(trk_data_mean, trk_data_temp, c('L', 'R'),
c('CST', 'CING', 'UNC'))
head(trk_data_mean)
corVal <- corrCal(trk_data_temp, trk_data_mean, c('L', 'R'),
c('CST', 'CING', 'UNC'))
aa <- cor.test(seq(1, 10, 0.1), seq(2, 11, 0.1))
aa$statistic
aa$statistic -> bb
mode(bb)
structure(bb)
str(bb)
aa$parameter
aa$method
? cor.test
aa$estimate
corrCal <- function(dat1, dat2, hemi, trk) {
corVal <- data.frame(Hemisphere = character(0), Tract = character(0),
corVal = numeric(0))
for(aa in hemi) {
for(bb in trk){
subdat1 <- filter(dat1, Hemisphere == aa & Tract == bb)
subdat2 <- filter(dat2, Hemisphere == aa & Tract == bb)
val <- cor.test(subdat1$FA, subdat2$mv)
corval <- data.frame(Hemisphere = aa, Tract = bb,
corVal = val$estimate)
corVal <- rbind(corVal, corval)
}
}
return(corVal)
}
corVal <- corrCal(trk_data_temp, trk_data_mean, c('L', 'R'),
c('CST', 'CING', 'UNC'))
corVal
setwd("~/GitHub/along-tract-stats/example/between_group")
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
corVal
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
corVal
? legend
?ggplot2
??ggplot2
example("guide_legend")
example(guides)
??scale_color_manual
source('~/.active-rstudio-document')
p2
p2 + scale_colour_manual(values = c('red', 'blue'))\
p2 + scale_colour_manual(values = c('red', 'blue'))
p2
p2 + guides()
source('~/.active-rstudio-document')
p2
p2 + scale_colour_manual(values = c('red', 'blue'))
p2 + scale_colour_manual(values = c('red', 'blue')) + legend()
?par
p2 + legend(10)
p2 + legend(10, legend = 'haha')
p2 + legend(10, legend = 'haha', col = c('red'))
p2
??theme
source('~/.active-rstudio-document')
p1 + geom_line()
source('~/.active-rstudio-document')
?scale_color_manual
str(df1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
df1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
df1
df1
p1
??scale_colour_discrete
??scale_alpha_discrete
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
scale_colour_discrete()
??scale_colour_manual
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
??scale_color_discrete
source('~/.active-rstudio-document')
p1
scale_color_manual
??scale_color_manual
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
?? scale_size_manual
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
theme_bw()
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
example(guides)
g <- guide_legend('title')
p1 <- p1 + guides(colour = g, size = g, shape = g)
p1
g <- guide_legend('title')
p1 <- p1 + guides(colour = g, size = g, alpha = g)
p1
g <- guide_legend('title')
p1 <- p1 + guides(colour = g, size = g, alpha = g, shape =g)
p1
?? guides
example(guides)
dat <- data.frame(x = 1:5, y = 1:5, p = 1:5, q = factor(1:5),
r = factor(1:5))
p <- ggplot(dat, aes(x, y, colour = p, size = q, shape = r)) + geom_point()
p
p + guides(colour = "colorbar", size = "legend", shape = "legend")
p + guides(colour = guide_colorbar(), size = guide_legend(),
shape = guide_legend())
g <- guide_legend("title")
p + guides(colour = g, size = g, shape = g)
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p
??scale_size
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
?? scale_alpha
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
??scale_alpha_manual
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
p1
source('~/.active-rstudio-document')
p1
install.packages(c("BH", "colorspace", "corrgram", "DEoptimR", "ggplot2", "knitr", "mgcv", "Rcpp", "reshape2", "rmarkdown", "scales", "survival", "yaml"))
install.packages(c("BH", "colorspace", "corrgram", "DEoptimR",
"ggplot2"))
install.packages(c("BH", "colorspace", "corrgram", "DEoptimR",
