source('~/GitHub/Myhub/Rbf/DoubleGroup/errbarplot.R')
library(ggplot2)
ls
ls()
pwd
getwd()
install.packages(c("cluster", "codetools", "colorspace", "foreign", "kernlab", "lattice", "Matrix", "mgcv", "mnormt", "psych", "R6", "stringi", "survival"))
install.packages('rmarkdown')
install.packages("Hotelling")
library(Hotelling)
data("container.df")
fit <- hotel.test(.~gp, data = container.df)
fit
fit$stats
?? solve
?? %*%
x <- 1:4
x*x
x%*%x
?? rnor
?? rnorm
rnorm(2)
library(ggplot2)
aa <- rnorm(1000)
geom_histogram(data = aa)
?? geom_histogram
hist(aa)
aa
names(aa)
head(diamonds)
ggplot(diamonds, aes(carat)) + geom_histogram()
aa_df <- as.data.frame(aa)
names(aa_df)
ggplot(aa_df, aes(aa)) + geom_histogram()
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
trk_data_FD
boxp1 <- ggplot(aes(x = from, y = FD), data = trk_CST)
boxp1 <- boxp1 + geom_boxplot() + theme_bw()
boxp1
boxp1 <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp1 <- boxp1 + geom_boxplot() + theme_bw()
boxp1
boxp1 + ylim(0, 0.2)
trk_CST <- filter(trk_data_FD, Tract == 'CST')
trk_CING <- filter(trk_data_FD, Tract == 'CING')
trk_UNC <- filter(trk_data_FD, Tract == 'UNC')
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp <- boxp1 + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
trk_CST <- filter(trk_data_FD, Tract == 'CST')
trk_CING <- filter(trk_data_FD, Tract == 'CING')
trk_UNC <- filter(trk_data_FD, Tract == 'UNC')
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = trk_CST)
boxp <- boxp + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
boxp1
boxp2
boxp3
boxp2
boxp3
boxp3
boxp1
grid.arrange(boxp1, boxp2, boxp3)
boxplotfunc <- function(dat) {
boxp <- ggplot(aes(x = From, y = FD), data = dat)
boxp <- boxp + geom_boxplot() + ylim(0, 0.2) + theme_bw()
boxp
}
boxp1 <- boxplotfunc(trk_CST)
boxp2 <- boxplotfunc(trk_CING)
boxp3 <- boxplotfunc(trk_UNC)
grid.arrange(boxp1, boxp2, boxp3)
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
p2
p1 <- ggplot(aes(x = Position, y = FA), data = trk_data)
p1 <- p1 + geom_line(aes(group = ID), alpha = 0.2) + facet_grid(Tract~Hemisphere) + ylim(0, 1) +
stat_summary(aes(group = 1), fun.data = groupStat, geom = 'smooth') + theme_bw()
p2 <- p1 + geom_line(data = trk_data_temp, aes(x = Position, y = FA), size = 2, colour = 'red', alpha = 0.2)
p2
p2 <- p1 + geom_line(data = trk_data_temp, aes(x = Position, y = FA), size = 2, colour = 'red', alpha = 0.5)
p2
?? group_by
aa <- group_by(trk_data, Point, Tract)
bb <- summarise(aa, n = n())
bb
bb <- summarise(aa, mv = mean())
aa
bb <- summarise(aa, mv = mean(FA))
bb
trk_data_temp
head(trk_data_temp)
trk_data_group <- group_by(trk_data, Point, Hemisphere, Tract)
trk_data_mean <- summarise(trk_data_group, mv = mean(FA))
trk_data_mean
?? as.name
?? filter
?? for
end
??for
end
for(aa in c('L', 'R')) {
cat('THis is ', aa)
}
corrCal <- function(dat1, dat2, hemi, trk) {
corVal <- data.frame(Hemisphere = character(0), Tract = character(0),
corVal = numeric(0))
for(aa in hemi) {
for(bb in trk){
subdat1 <- filter(dat1, Hemisphere == aa & Tract == bb)
subdat2 <- filter(dat2, Hemisphere == aa & Tract == bb)
corval <- data.frame(Hemisphere = aa, Tract = bb,
corVal = cor.test(subdat1$FA, subdat2$mv))
corVal <- rbind(corVal, corval)
}
}
return(corVal)
}
corVal <- corrCal(trk_data_mean, trk_data_temp, c('L', 'R'),
c('CST', 'CING', 'UNC'))
head(trk_data_mean)
corVal <- corrCal(trk_data_temp, trk_data_mean, c('L', 'R'),
c('CST', 'CING', 'UNC'))
aa <- cor.test(seq(1, 10, 0.1), seq(2, 11, 0.1))
aa$statistic
aa$statistic -> bb
mode(bb)
structure(bb)
str(bb)
aa$parameter
aa$method
? cor.test
aa$estimate
corrCal <- function(dat1, dat2, hemi, trk) {
corVal <- data.frame(Hemisphere = character(0), Tract = character(0),
corVal = numeric(0))
for(aa in hemi) {
for(bb in trk){
subdat1 <- filter(dat1, Hemisphere == aa & Tract == bb)
subdat2 <- filter(dat2, Hemisphere == aa & Tract == bb)
val <- cor.test(subdat1$FA, subdat2$mv)
corval <- data.frame(Hemisphere = aa, Tract = bb,
corVal = val$estimate)
corVal <- rbind(corVal, corval)
}
}
return(corVal)
}
corVal <- corrCal(trk_data_temp, trk_data_mean, c('L', 'R'),
c('CST', 'CING', 'UNC'))
corVal
install.packages(c("BH", "colorspace", "corrgram", "DEoptimR", "ggplot2", "knitr", "mgcv", "Rcpp", "reshape2", "rmarkdown", "scales", "survival", "yaml"))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
df1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
p1
?? guides
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/.active-rstudio-document')
p1
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
corVal
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
corVal
source('~/GitHub/along-tract-stats/example/between_group/trk_plot_data_temp.R')
corVal
aa <- c(0.98, 0.95, 0.97, 0.98, 0.95, 0.95, 0.9, 0.91, 0.95, 0.93, 0.88, 0.95)
bb <- c(0.88, 0.96, 0.75, 0.87, 0.91, 0.82, 0.88, 0.95, 0.8, 0.67, 0.97, 0.86)
t.test(aa, bb)
source('~/GitHub/along-tract-stats/example/between_group/FD_Value.R')
install.packages('tidyr')
source('~/GitHub/along-tract-stats/example/between_group/FD_Value.R')
install.packages('devtools')
devtools::install_github("yzhizai/atlasBasedFiberAnalysis")
source('~/GitHub/along-tract-stats/example/between_group/FD_Value.R')
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
p2
p1
source('~/GitHub/along-tract-stats/example/between_group/FD_Value.R')
p_boxplot
source('~/GitHub/along-tract-stats/example/between_group/FD_Value.R')
p_boxplot
devtools::install_github('yzhizai/summaryTemp')
library(summaryTemp)
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
install.packages("SparkR")
exit
q()
source('~/spark/test.R')
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
source('~/spark/test.R')
source('~/spark/test.R')
source('~/spark/test.R')
source('~/spark/test.R')
source('~/spark/test.R')
source('~/spark/test.R')
source('~/spark/test.R')
Sys.getenv('JAVA_HOME')
q()
source('~/spark/test.R')
library(SparkR, lib.loc = file.path(Sys.getenv("SPARK_HOME"), 'R', 'lib'))
source('~/spark/test.R')
head(people)
source('~/spark/test.R')
install.packages("sparklyr")
library(sparklyr)
sc <- spark_connect(master = 'local')
q()
source('~/spark/test.R')
source('~/spark/test.R')
library(sparklyr)
sc <- spark_connect(master = "local")
spark_install(version = '2.0.2')
library(sparklyr)
dir()
q()
library(sparklyr)
sc <- spark_connect(master = "local")
source('~/spark/test.R')
flights_tbl %>% filter(dep_delay == 2)
flights_tbl %>% filter(dep_delay == 2)
spark_disconnect(sc)
spark_disconnect(sc)
source('~/spark/test.R')
sc <- spark_connect(master = "local")
source('~/spark/test.R')
library(ggplot2)
ggplot(delay, aes(dist, delay)) + geom_point(aes(size = count), alpha = 1/2) + geom_smooth() + scale_size_area(max_size = 2)
batting_wbl %>% select(playerID, yearID, teamID, G, AB:H) %>% arrange(palyerID, yearID, teamID) %>% group_by(playerID) %>% filter(min_rank(desc(H)) <= 2 & H > 0)
batting_tbl %>% select(playerID, yearID, teamID, G, AB:H) %>% arrange(palyerID, yearID, teamID) %>% group_by(playerID) %>% filter(min_rank(desc(H)) <= 2 & H > 0)
head(batting_tbl)
batting_tbl %>% select(playerID, yearID, teamID, G, AB:H) %>% arrange(playerID, yearID, teamID) %>% group_by(playerID) %>% filter(min_rank(desc(H)) <= 2 & H > 0)
library(DBI)
iris_preview <- dbGetQuery(sc, "SELECT * FROM iris LIMIT 10")
iris_preview
source('~/.active-rstudio-document')
fit
summary(fit)
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
source('~/ratTest/errbar_plot_subn.R')
source('~/ratTest/errbar_plot_subn.R')
?? geom_errorbar
setwd("~/GitHub/along-tract-stats/example/between_group")
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
boxp
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
p_pat
trk_data_pat
p_pat
?? ggplot2
??geom_line
p_sig_pat
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
p_pat
p_sig_pat
p_pat
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
p_pat
p_pat
p_pat_t <- ggplot(data = trk_data_pat, aes(x = Position, y = FA))
p_pat_t  <- p_pat_t + geom_line(aes(group = ID:State, color = State))
p_pat_t
p_pat_t <- ggplot(data = trk_data_pat, aes(x = Position, y = FA))
str(trk_data_pat)
??formula
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
View(trk_data_pat)
str(trk_data_pat)
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
p_pat
p_sig_pat
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
p_sig_pat
p_pat
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
trk_data_CST
?? stat_summary
source('~/GitHub/along-tract-stats/example/between_group/between_grp_symm_simplified.R')
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
p_sig
pval
break_list$on
break_list$off
models$anova
source('~/GitHub/along-tract-stats/example/between_group/between_grp_health_hemi.R')
p1
View(trk_data_pat)
source('~/GitHub/along-tract-stats/example/between_group/between_grp_simplified_simplified.R')
source('~/GitHub/along-tract-stats/example/between_group/FD_Value_sum.R')
p_boxplot
trk_FD_sum
??group_by
trk_FD_CST
str(trk_FD_CING)
??oneway_test
x <- range(10)
x
x <- rnorm(10)
x
y <- rnorm(10)
pval <- oneway_test(x~y)
aa <- data_frame(x = x, y = factor(rep(c('a', 'b'), each = c(5, 5)))
)
aa <- data_frame(x = x, y = factor(rep(c('a', 'b'),c(5, 5)))
)
aa
pval <- oneway_test(x~y)
pval <- aa %>% oneway_test(x~y)
pval <- oneway_test(x~y, aa)
pval
pval@parameter
str(pval)
p(pval)
t <- oneway_test(x~y, aa)
tt <- oneway_test(x~y, aa)
str(tt)
tt@estimates
methods(tt)
tt
tt@call
cal(tt)
call(tt)
tt
str(tt)
??oneway_test
pvalue(tt)
str(trk_FD_sum)
FD_pval <- function(df) {
df1 <- filter(df, From == 'subj' | From == 'asym')
df2 <- filter(df, From == 'subj' | From == 'sym')
pval1 <- pvalue(oneway_test(FD~From, df1))
pval2 <- pvalue(oneway_test(FD~From, df2))
pval_t <- data.frame(pval = c(pval1, pval2),group = c('asym', 'sym'))
}
fdpval <- trk_FD_sum %>% group_by(Group) %>%
FD_pval
fdpval
fdpval <- trk_FD_sum %>% group_by(Group) %>%
FD_pval()
fdpval
str(trk_FD_sum)
trk_FD_sum$Group
fdpval <- trk_FD_sum %>% group_by(facotr(Group)) %>%
FD_pval()
fdpval <- trk_FD_sum %>% group_by(factor(Group)) %>%
FD_pval()
fdpval
fdval <- rbind(FD_pval(trk_CST), FD_pval(trk_CING), FD_pval(trk_UNC))
fdval <- rbind(FD_pval(trk_FD_CST), FD_pval(trk_FD_CING),
FD_pval(trk_FD_UNC))
fdval
q()
